////////////////////////////////////////////////////////////////////////////////
//
// This code is automatically generated by BACCARAT to define AmBeXe137Source materials
//
////////////////////////////////////////////////////////////////////////////////
//
//      Change log
// 17 March 2016 - Initial Template submission (Jingke)
//
////////////////////////////////////////////////////////////////////////////////

#ifndef AmBeXe137SourceMaterials_HH
#define AmBeXe137SourceMaterials_HH 1

//
//	c++ includes
//
#include <map>

//
//	Geant4 includes
//
#include "G4String.hh"

//
//	Class forwarding
//
class G4Material;
class G4VisAttributes;
//class G4MaterialPropertiesTable;
class G4OpticalSurface;

typedef std::map<G4String, G4Material*> material_map;
//typedef std::map<G4String, G4MaterialPropertiesTable*> property_map;
typedef std::map<G4String, G4VisAttributes*> vis_map;
typedef std::map<G4String, G4OpticalSurface*> optical_map;

//------++++++------++++++------++++++------++++++------++++++------++++++------
class AmBeXe137SourceMaterials
{
public:
  AmBeXe137SourceMaterials();
  ~AmBeXe137SourceMaterials();
  
  static AmBeXe137SourceMaterials *GetInstance();
  
  G4Material *GetMaterialByName(G4String);
  G4VisAttributes *GetVisAttributesByName(G4String);
  //  G4MaterialPropertiesTable *GetPropertiesTableByName(G4String);
  G4OpticalSurface *GetOpticalSurfaceByName(G4String);

  inline G4Material* GasXe() { return gasXe; };
  inline G4Material* GasEnrichedXe() { return gasEnrichedXe; };
  
private:
  
  static AmBeXe137SourceMaterials *AmBeXe137Sourcematerials;  


  material_map materials;
  //  property_map properties;
  vis_map visattributes;
  optical_map opticals;

  G4Material * gasXe;
  G4Material * gasEnrichedXe;
  
  void CreateMaterials();
  void CreateOpticalSurfaces();
  void CreateVisualAttributes();

};

#endif
