////////////////////////////////////////////////////////////////////////////////
//
// This code is automatically generated by BACCARAT to define the messenger
// commands for the XeNeu project.
// All geometry, physics, io managements, etc, happen here
//
////////////////////////////////////////////////////////////////////////////////
//
//      Change log
// 17 March 2016 - Initial Template submission (Jingke)
//
////////////////////////////////////////////////////////////////////////////////

//
//	GEANT4 includes
//
#include "G4UIdirectory.hh"
// uncomment the headers that you will need
//#include "G4UIcmdWithAnInteger.hh"
//#include "G4UIcmdWithoutParameter.hh"
//#include "G4UIcmdWithAString.hh"
#include "G4UIcmdWithABool.hh"
//#include "G4UIcmdWith3VectorAndUnit.hh"
//#include "G4UIcmdWithADoubleAndUnit.hh"
//#include "G4UIcmdWith3Vector.hh"
//#include "G4UIcmdWithADouble.hh"
#include "globals.hh"

//
// Project-specific includes
//
#include "XeNeuDTMessenger.hh"
#include "XeNeuDTDetector.hh"

//------++++++------++++++------++++++------++++++------++++++------++++++------
//					Messenger()
//------++++++------++++++------++++++------++++++------++++++------++++++------
XeNeuDTMessenger::XeNeuDTMessenger( XeNeuDTDetector *Det )
  : XeNeudetector( Det )
{
  //  Set up the directory
  XeNeuDir = new G4UIdirectory( "/XeNeu/" );
  XeNeuDir->SetGuidance( "All XeNeu project commands are contained under /XeNeu/" );

  XeNeuDDShieldingCommand = new G4UIcmdWithABool("/XeNeu/ddShieldingOn", this);
  XeNeuDDShieldingCommand->SetGuidance("Turns the dd shielding geometry on or off.");
  XeNeuDDShieldingCommand->SetGuidance(" The default choice is false." );
  XeNeuDDShieldingCommand->AvailableForStates( G4State_PreInit, G4State_Idle );

  XeNeuDTShieldingCommand = new G4UIcmdWithABool("/XeNeu/dtShieldingOn", this);
  XeNeuDTShieldingCommand->SetGuidance("Turns the dt shielding geometry on or off.");
  XeNeuDTShieldingCommand->SetGuidance(" The default choice is false." );
  XeNeuDTShieldingCommand->AvailableForStates( G4State_PreInit, G4State_Idle ); 
}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//					~Messenger()
//------++++++------++++++------++++++------++++++------++++++------++++++------
XeNeuDTMessenger::~XeNeuDTMessenger()
{
  //delete everything that you declared with new
  delete XeNeuDir;
  delete XeNeuDDShieldingCommand;
  delete XeNeuDTShieldingCommand;
}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//					SetNewValue()
//------++++++------++++++------++++++------++++++------++++++------++++++------
void XeNeuDTMessenger::SetNewValue( G4UIcommand *command, G4String newValue )
{
   if( command == XeNeuDDShieldingCommand )
      XeNeudetector->SetXeNeuDDShielding( XeNeuDDShieldingCommand->GetNewBoolValue(newValue) ); 

   if( command == XeNeuDTShieldingCommand )
      XeNeudetector->SetXeNeuDTShielding( XeNeuDTShieldingCommand->GetNewBoolValue(newValue) ); 

}

