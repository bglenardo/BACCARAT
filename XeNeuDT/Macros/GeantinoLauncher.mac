####################################################################################################
# example macro for the LUXSim package                                                             #
#                                                                                                  #
# Change log:                                                                                      #
# 19 Aug 2013 - Initial submission (Vic)                                                           #
#                                                                                                  #
####################################################################################################
/run/verbose 1
/control/verbose 0
/tracking/verbose 1
/grdm/verbose 0
/process/verbose 0

# Set up visualization - Comment this stuff out if you want to skip visualization
# This saves a visualization of the event in a .wrl file, which can be viewed with MeshLab
# or some other software. I haven't figured out how to get MeshLab to display the particle tracks yet. 
/vis/open VRML2FILE
/vis/drawVolume
/vis/scene/add/trajectories
/vis/scene/endOfEventAction accumulate
/tracking/storeTrajectory 1
#/vis/viewer/set/viewpointVector 0.5 0.75 1
/vis/viewer/set/upVector 0 0 1
/vis/viewer/zoom 0 
/vis/viewer/set/viewpointThetaPhi 45 45             
/vis/viewer/set/style surface


# Color keys: white, gray, grey, black, red, green, blue, cyan, magenta, yellow - Comment this stuff out if you want to skip visualization
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/set e+ blue
#/vis/modeling/trajectories/drawByParticleID-0/set e- magenta
#/vis/modeling/trajectories/drawByParticleID-0/set proton cyan
#/vis/modeling/trajectories/drawByParticleID-0/set neutron grey
#/vis/modeling/trajectories/drawByParticleID-0/set gamma green
#/vis/modeling/trajectories/drawByParticleID-0/set opticalPhoton yellow

# This next set of lines is to, as it appears, initialize the simulation
/run/initialize

# Set the output directory
/Bacc/io/outputDir ./
/Bacc/io/outputName BaccTest

# Set the random seed
#/Bacc/randomSeed 0

# Select the kind of detector to use
/Bacc/detector/select XeNeuDTDetector
/Bacc/detector/update


# This shoots a "geantino" through the center of the geometry from above. The geantino is a particle
# which by definition does not interact, but can be tracked using the tracking commands at the 
# beginning of this file. It's useful for debugging and checking your geometry.
/gps/particle geantino
/gps/position 0 0 26.5 cm
/gps/direction -1 0 0


/Bacc/physicsList/useOpticalProcesses 0


/Bacc/beamOn 1
exit
