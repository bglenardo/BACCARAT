////////////////////////////////////////////////////////////////////////////////
//
// This code is automatically generated by BACCARAT to define Xe127Radioassay geometry
//
////////////////////////////////////////////////////////////////////////////////
//
//      Change log
// 17 March 2016 - Initial Template submission (Jingke)
//
////////////////////////////////////////////////////////////////////////////////

//
//      C/C++ includes
//
#include <sstream>
#include <ctime>

//
//      GEANT4 includes
//
#include "G4SystemOfUnits.hh"
#include "G4LogicalVolume.hh"
#include "G4Material.hh"
#include "G4NistManager.hh"
#include "G4RotationMatrix.hh"
#include "G4Tubs.hh"
#include "G4Box.hh"
#include "G4Sphere.hh"
//#include "G4Torus.hh"
//#include "G4CutTubs.hh"
//#include "G4Ellipsoid.hh"
//#include "G4Polyhedra.hh"
//#include "G4Cons.hh"
#include "G4SubtractionSolid.hh"
#include "G4UnionSolid.hh"
//#include "G4IntersectionSolid.hh"
//#include "G4OpticalSurface.hh"
//#include "G4LogicalBorderSurface.hh"

//
//      BACCARAT includes
//
#include "BaccManager.hh"
#include "BaccDetectorComponent.hh"
#include "BaccMaterials.hh"
#include "BaccSource.hh"
#include "BaccPhysicsOpticalPhysics.hh"

//
//      Project includes
//
#include "Xe127RadioassayDetector.hh"
#include "Xe127RadioassayMaterials.hh"
#include "Xe127RadioassayMessenger.hh"

//
//		Definitions
//

using namespace Xe127RadioassayDetectorParameters;
using namespace std;


//------++++++------++++++------++++++------++++++------++++++------++++++------
//                          Detector Constructor
//------++++++------++++++------++++++------++++++------++++++------++++++------
Xe127RadioassayDetector::Xe127RadioassayDetector( G4String detName,
			G4String outVolName )
{
  detectorName = detName;
  outermostVolumeName = outVolName;
  
  Xe127Radioassaymessenger = new Xe127RadioassayMessenger( this );
  
  //***DO NOT*** create another instance of Xe127RadioassayMaterials anywhere else!
  //Just refer to it using Xe127RadioassayMaterials::GetInstance().
  Xe127Radioassaymaterials = Xe127RadioassayMaterials::GetInstance();
  if(!Xe127Radioassaymaterials) Xe127Radioassaymaterials = new Xe127RadioassayMaterials();
  //get the Bacc Materials and Nist materials
  NISTmaterials = G4NistManager::Instance();
  BACCmaterials = BaccMaterials::GetMaterials();
}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//                          Detector Destructor
//------++++++------++++++------++++++------++++++------++++++------++++++------
Xe127RadioassayDetector::~Xe127RadioassayDetector()
{
  if(Xe127Radioassaymessenger) delete Xe127Radioassaymessenger;
  if(Xe127Radioassaymaterials) delete Xe127Radioassaymaterials;
}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//                              InitializeDetector()
//------++++++------++++++------++++++------++++++------++++++------++++++------
void Xe127RadioassayDetector::InitializeDetector(){
  
  //if you need to access BaccManager
  BaccManager *BACCmanager = BaccManager::GetManager();
  
  //you can add the detector-specific source catalog here
  
}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//                              BuildDetector()
//------++++++------++++++------++++++------++++++------++++++------++++++------
void Xe127RadioassayDetector::BuildDetector(){
  InitializeDetector();

  //this is how you access your material definition
  G4cout<<"Xe127RadioassayMaterials example"<<G4endl;
  G4cout<<Xe127Radioassaymaterials->GetMaterialByName("liquidXe")<<G4endl<<G4endl;
 
  //Alternatively you can use the nist material database
  G4cout<<"NistMaterials example"<<G4endl;
  G4cout<< NISTmaterials->FindOrBuildMaterial("G4_lXe")<<G4endl<<G4endl;
  
  //another way is to use BaccMaterials
  G4cout<<"BaccMaterials example"<<G4endl;
  G4cout<<BACCmaterials->LiquidXe()<<G4endl<<G4endl;
 
  //  Remember that the outermost vessel is defined as a LUXSimDetector
  //	"logicalVolume".
  
  //build your detector here    
  
  //example box -- make it into a minimal working example
  G4Box * example_box = new G4Box("example_box", 10.*m,10.*m,10.*m);
  logicalVolume  = new G4LogicalVolume(example_box, BACCmaterials->Vacuum(), "example_log");
  logicalVolume->SetVisAttributes(BACCmaterials->VacuumVis());


  G4Tubs * ge_detector_shell_outer = new G4Tubs("ge_detector_shell_tubs", 
                                          0.,
                                          70./2.*mm,
                                          9.8/2. * 2.54 * cm,
                                          0.*deg, 360.*deg);
  G4Tubs * ge_detector_shell_inner = new G4Tubs("ge_detector_shell_inner_tubs", 
                                          0.*mm,
                                          70./2.*mm - 1.*mm,
                                          9.8/2. * 2.54 * cm - 1.*mm,
                                          0.*deg, 360.*deg);
  G4SubtractionSolid * ge_detector_shell_sub = new G4SubtractionSolid(
                                          "ge_detector_shell",
                                           ge_detector_shell_outer,
                                           ge_detector_shell_inner);

 G4LogicalVolume * ge_detector_shell_log = new G4LogicalVolume(
                                          ge_detector_shell_sub, 
                                          BACCmaterials->Aluminum(),
                                          "ge_detector_shell_log");

 ge_detector_shell_log->SetVisAttributes( BACCmaterials->AluminumVis() );
 double ge_can_z_offset = 7.*2.54*cm;
 BaccDetectorComponent * ge_detector_shell = new BaccDetectorComponent(0,
                                          G4ThreeVector(0.,0.,ge_can_z_offset),
                                          ge_detector_shell_log,
                                          "ge_detector_al_casing",
                                          logicalVolume,
                                          0,0,true);

 

 G4Tubs * al_cup_outer = new G4Tubs("al_cup_outer_tubs",
                                0.,65.*mm/2.,
                                94./2.*mm,
                                0*deg,360*deg);
 G4Tubs * al_cup_inner = new G4Tubs("al_cup_inner_tubs",
                                0.,
                                65.*mm/2. - 0.8*mm,
                                94./2.*mm - 3.*mm,
                                0*deg,360*deg);
 G4SubtractionSolid * al_cup_sub = new G4SubtractionSolid("al_cup_sub",
                                al_cup_outer,
                                al_cup_inner);
 G4LogicalVolume * ge_detector_cup_log = new G4LogicalVolume( al_cup_sub,
                                BACCmaterials->Aluminum(),
                                "ge_detector_cup_log");
 ge_detector_cup_log->SetVisAttributes( BACCmaterials->TestPurpleVis() );
 double ge_cup_offset = ge_can_z_offset + (9.8/2. * 2.54 * cm - 1.*mm) - 
                        94./2.*mm - 3.*mm;
 BaccDetectorComponent * ge_detector_cup = new BaccDetectorComponent(0,
                                G4ThreeVector(0.,0.,ge_cup_offset),
                                ge_detector_cup_log,
                                "ge_detector_cup",
                                logicalVolume,
                                0,0,true);

 
 
 G4Tubs * ge_detector_crystal_tubs = new G4Tubs("ge_detector_crystal_tubs",
                                0., 
                                51.7/2.*mm,
                                55.5/2.*mm,
                                0*deg,360*deg);
 G4Tubs * ge_detector_crystal_contact = new G4Tubs(
                                "ge_detector_crystal_contact",
                                0.,
                                9.1/2.*mm,
                                47.*mm/2.,
                                0*deg,360*deg);
 G4SubtractionSolid * ge_detector_crystal_sub = new G4SubtractionSolid(
                                "ge_detector_crystal_sub",
                                ge_detector_crystal_tubs,
                                ge_detector_crystal_contact,
                                0,
                                G4ThreeVector(0,0,(-55.5/2+47./2.)*mm));
 G4LogicalVolume * ge_detector_crystal_log = new G4LogicalVolume( 
                                ge_detector_crystal_sub,
                                BACCmaterials->Titanium(),
                                "ge_detector_crystal_log");
 ge_detector_crystal_log->SetVisAttributes( BACCmaterials->TestBlueVis() );
 double ge_crystal_offset = ge_cup_offset + (94/2.-3.-55.5/2.)*mm;
 BaccDetectorComponent * ge_detector_crystal = new BaccDetectorComponent(0,
                                G4ThreeVector(0,0,ge_crystal_offset),
                                ge_detector_crystal_log,
                                "ge_detector_crystal",
                                logicalVolume,
                                0,0,true);



 G4Tubs * cylinder_barrel_tubs = new G4Tubs("cylinder_barrel_tubs",
                                0.,
                                50.8*mm/2.,
                                2.*2.54*cm,
                                0*deg,360*deg);


 
 G4LogicalVolume* cylinder_barrel_log = new G4LogicalVolume(
                                cylinder_barrel_tubs,
                                BACCmaterials->Vacuum(),
                                "cylinder_barrel_log");
 cylinder_barrel_log->SetVisAttributes( BACCmaterials->VacuumVis() );
 double cylinder_x_offset = 4.*2.54*cm;
 G4RotationMatrix * rot = new G4RotationMatrix();
 rot->rotateX(90.*deg);

 BaccDetectorComponent * cylinder = new BaccDetectorComponent(rot,
                                G4ThreeVector(cylinder_x_offset,0,1.*2.54*cm),
                                cylinder_barrel_log,
                                "cylinder",
                                logicalVolume,
                                0,0,true);



 double cylinder_wall_thickness = 0.09 * 2.54 * cm;
 G4Tubs * xe_gas_tubs = new G4Tubs("gas_volume_tubs",
                                0,
                                50.8*mm/2. - cylinder_wall_thickness,
                                2.*2.54*cm - cylinder_wall_thickness,
                                0*deg,360*deg);
 G4LogicalVolume * xe_gas_log = new G4LogicalVolume(
                                xe_gas_tubs,
                                BACCmaterials->HighPressureGasXe(),
                                "xe_gas_log");
 xe_gas_log->SetVisAttributes( BACCmaterials->TestGreenVis() );
 BaccDetectorComponent * xe_gas = new BaccDetectorComponent(0,
                                G4ThreeVector(),
                                xe_gas_log,
                                "xe_gas",
                                cylinder_barrel_log,
                                0,0,true);


 G4SubtractionSolid * cylinder_shell_sub = new G4SubtractionSolid("cylinder_shell_sub",
                                                                  cylinder_barrel_tubs,
                                                                  xe_gas_tubs);

 G4LogicalVolume* cylinder_shell_log = new G4LogicalVolume(
                                cylinder_shell_sub,
                                BACCmaterials->SS316(),
                                "cylinder_shell_log");
 cylinder_barrel_log->SetVisAttributes( BACCmaterials->SteelVis() );

 BaccDetectorComponent * cylinder_shell = new BaccDetectorComponent(0,
                                G4ThreeVector(),
                                cylinder_shell_log,
                                "cylinder_shell",
                                cylinder_barrel_log,
                                0,0,true);


}

//------++++++------++++++------++++++------++++++------++++++------++++++------
//                                      SetOrigin()
//------++++++------++++++------++++++------++++++------++++++------++++++------
G4ThreeVector Xe127RadioassayDetector::SetOrigin(BaccDetectorComponent *ExpHall){
  //you need to implement this function here
  return G4ThreeVector(0,0,0);
}
